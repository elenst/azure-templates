########################################################################
# Collect results of all test runs and print summary
########################################################################

parameters:
  vmImage: 'Ubuntu 16.04'
  condition: always()
  dependencies: []

jobs:

- job: Print_Summary
  pool:
    vmImage: ${{ parameters.vmImage }}
  condition: ${{ parameters.condition }}
  dependsOn: ${{ parameters.dependencies }}

  steps:

  # Collect test summaries stored as artifacts
  - task: DownloadBuildArtifacts@0
    inputs:
      downloadType: 'specific'
      itemPattern: summary-*/**/*
      downloadPath: $(Build.ArtifactStagingDirectory)
    displayName: 'Download test result summaries'

  # Print the summary
  - script: |
      git clone "https://github.com/elenst/mariadb-toolbox" --depth=1 --branch=$(env.toolboxBranch) $(env.toolboxDir)
      echo ; \
      echo "####################################################################################################" ; \
      echo "SUMMARY:"
      echo "Server branch $(env.serverBranch) $(env.cmakeOptions)"
      echo ""
      echo "Found" `ls $(Build.ArtifactStagingDirectory)/*/trial.log | wc -l` "test result(s)"
      grep 'exited with exit status' $(Build.ArtifactStagingDirectory)/*/trial.log | sed -e 's/.*exited with exit status STATUS_\([A-Z_]*\).*/\1/' | sort | uniq -c
      for d in $(Build.ArtifactStagingDirectory)/* ; do \
        echo ; \
        echo "####################################################################################################" ; \
        echo "### $d" ; \
        res=`grep 'exited with exit status' $d/trial.log | sed -e 's/.*exited with exit status STATUS_\([A-Z_]*\).*/\1/'` ; \
        echo "------------"; \
        echo "Test result:" $res; \
        echo ; \
        cat $d/versions ; \
        echo ; \
        grep -A 1 'Final command line' $d/trial.log ; \
        echo ; \
        perl $(env.toolboxDir)/travis/check_for_known_bugs.pl $d/mysql*.err* $d/stacktraces $d/trial.log \
        echo ; \
        for f in $d/mysql*.err* ; do echo "========== $f ==========" ; cat $f | grep -v -f $(env.toolboxDir)/travis/server_warnings.supp | grep -v "\[Note\]" | grep -v "^$" | cut -c 1-4096 ; echo ; done ; \
        echo "####################################################################################################" ; \
      done
    displayName: 'Print summary'
    condition: ${{ parameters.condition }}

