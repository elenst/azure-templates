trigger: none

  # Similar simplify-mtr, only the input is the output of the previous simplifcation stage
  # (either the first one, in simplify-mtr, or the Nth one, in simplify-mtr-continue).
  #
  # There is no general log, the entry point is last_test.test from the previous stage.
  #
  # _TRIGGER_ID still has a form of PipelineID-BuildId,
  # e.g. 10-837
  # Repro info is located in artifact data, which contains 
  # - data/build (the binaries, we need them)
  # - data/last_test.test -- the test case to start from
  # - simplification_cmd -- the command to run
  #
  # Since we just continue the same job, we don't need any other parameters, only _TRIGGER_ID.
  # However, if MTR_OPTIONS are provided (e.g. to change the dynamics),
  # they will be used in addition to the old ones
  
jobs:

#########
- job: Simplify
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu 20.04'
  strategy:
    parallel: 1

  steps:

  - script: |
      if [ -z "$_TRIGGER_ID" ] ; then
        echo "##vso[task.complete result=Failed]\"_TRIGGER_ID\" has not been specified"
      fi
      IFS='-' read -r -a ids <<< $_TRIGGER_ID
      TRIGGERING_PIPELINE_ID=${ids[0]}
      TRIGGERING_BUILD_ID=${ids[1]}
      echo "##vso[task.setvariable variable=TRIGGERING_PIPELINE_ID]$TRIGGERING_PIPELINE_ID"
      echo "##vso[task.setvariable variable=TRIGGERING_BUILD_ID]$TRIGGERING_BUILD_ID"
      echo "##vso[task.setvariable variable=BASEDIR]$HOME/server"
      echo "##vso[task.setvariable variable=RQG_HOME]$HOME/rqg"
      echo "##vso[task.setvariable variable=TOOLBOX_DIR]$HOME/toolbox"
      echo "Trigger ID:            " $_TRIGGER_ID
      echo "Triggering pipeline ID:" $TRIGGERING_PIPELINE_ID
      echo "Triggering build ID:   " $TRIGGERING_BUILD_ID
      echo "Simplification options:" $SIMPLIFICATION_OPTIONS
    displayName: 'Check configuration'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'MariaDB tests'
      pipeline: '$(TRIGGERING_PIPELINE_ID)'
      buildVersionToDownload: 'specific'
      buildId: '$(TRIGGERING_BUILD_ID)'
      downloadType: 'single'
      artifactName: 'data'
      itemPattern: 'data/@(build|repro)/**'
      downloadPath: '$(System.ArtifactsDirectory)' 
    name: get_repro_info
    displayName: 'Download build and repro info from the previous stage'

  - script: |
      mkdir $BASEDIR
      cd $BASEDIR
      tar zxf $(System.ArtifactsDirectory)/data/build/build-*.tar.gz
    name: unpack_binaries
    displayName: 'Unpack server binaries'

  - template: steps/install-deb-packages.yml
    parameters:
      INSTALLATION_SET: 'runtime'

  - script: |
      mv $(System.ArtifactsDirectory)/data/build $(System.ArtifactsDirectory)/
      mv $(System.ArtifactsDirectory)/data/repro $(System.ArtifactsDirectory)/
      rm -rf $(System.ArtifactsDirectory)/data
      git clone "https://github.com/MariaDB/randgen" --branch=elenst-dev $RQG_HOME
      git clone "https://github.com/elenst/mariadb-toolbox" $TOOLBOX_DIR
      REPRO_DIR=$(System.ArtifactsDirectory)/repro
      cd $BASEDIR
      patch -p 1 < $TOOLBOX_DIR/mtr/mtr_default_server.patch
      cd mysql-test
      mkdir suite/bug
      mv $REPRO_DIR/last_test.test $BASEDIR/mysql-test/suite/bug/repro.test
      if [ -n "$MTR_OPTIONS" ] ; then
        echo `cat $REPRO_DIR/simplification_cmd | sed -e "s/\$\*//"` "--options=\"$MTR_OPTIONS\"" \$\* > $REPRO_DIR/simplification_cmd
        echo "Simplification command has been adjusted:"
        cat $REPRO_DIR/simplification_cmd
      fi
      if [ -n "$DB_HOST" ] ; then
        id=`date '+%s'`
        test_id="${TRIGGERING_BUILD_ID}"
        search_pattern=`cat $REPRO_DIR/repro.notes | grep -A 1 "while searching for pattern" | tail -n 1`
        $BASEDIR/bin/mysql --host=$DB_HOST --port=$DB_PORT --user=$DB_USER -p$DBP -e "REPLACE INTO regression.repro_status (id, host, test_id, screen, search_pattern, status) VALUES ($id,'azure30','$test_id','$(Build.BuildId)', '$search_pattern', 'Simplification continued')"
      fi
      . $REPRO_DIR/simplification_cmd $SIMPLIFICATION_OPTIONS
      res=$?
      cp suite/bug/repro.test $(Build.ArtifactStagingDirectory)/first_test.test
      tar zcf repro.output.tar.gz repro.output var/log/mysqld.1.err suite/bug
      mv repro.output.tar.gz $(Build.ArtifactStagingDirectory)/
      last_test=`ls -tr $BASEDIR/mysql-test/suite/bug/repro.test.reproducible.* | tail -n 1`
      cp $last_test $REPRO_DIR/last_test.test
      echo "#######################################################################"
      echo "current simplification ID $(System.DefinitionId)-$(Build.BuildId)"
      cat $REPRO_DIR/repro.notes
      cat $REPRO_DIR/simplification_cmd
      if [ -n "$SIMPLIFICATION_OPTIONS" ] ; then
        echo "with extra simplification options: $SIMPLIFICATION_OPTIONS"
      fi
      echo ""
      echo "RESULT: $res"
      echo "#######################################################################"
      echo ""
      if [ "$res" == "0" ] ; then
        status="SUCCEEDED"
      elif [ "$res" == "1" ] ; then
        echo "##vso[task.complete result=Failed]Could not reproduce the failure"
        status="FAILED"
      elif [ "$res" == "2" ] ; then
        echo "##vso[task.complete result=SucceededWithIssues]The process ended due to approaching timeout"
        status="Part-SUCCEEDED"
      fi
      if [ -n "$DB_HOST" ] ; then
        $BASEDIR/bin/mysql --host=$DB_HOST --port=$DB_PORT --user=$DB_USER -p$DBP -e "REPLACE INTO regression.repro_status (id, host, test_id, screen, search_pattern, status) VALUES ($id,'azure30','$test_id','$(Build.BuildId)', '$search_pattern', '$status')"
      fi
    name: simplify
    displayName: 'Prepare and run simplification'
    env:
      DB_HOST: $(DbHost)
      DB_PORT: $(DbPort)
      DB_USER: $(DbUser)
      DBP: $(DbPwd)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/
      artifactName: data
    displayName: 'Store test file and output'
    condition: always()
