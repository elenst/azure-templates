trigger: none

  # Similar simplify-mtr, only the input is the output of the previous simplifcation stage
  # (either the first one, in simplify-mtr, or the Nth one, in simplify-mtr-continue).
  #
  # There is no general log, the entry point is last_test.test from the previous stage.
  #
  # TRIGGER_ID still has a form of PipelineID-BuildId,
  # e.g. 10-837
  # Repro info is located in artifact data, which contains 
  # - data/build (the binaries, we need them)
  # - data/last_test.test -- the test case to start from
  # - simplification_cmd -- the command to run
  #
  # Since we just continue the same job, we don't need any other parameters, only TRIGGER_ID
  
jobs:

#########
- job: Simplify
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    parallel: 1

  steps:

  - script: |
      if [ -z "$TRIGGER_ID" ] ; then
        echo "##vso[task.complete result=Failed]\"TRIGGER_ID\" has not been specified"
      fi
      IFS='-' read -r -a ids <<< $TRIGGER_ID
      TRIGGERING_PIPELINE_ID=${ids[0]}
      TRIGGERING_BUILD_ID=${ids[1]}
      echo "##vso[task.setvariable variable=TRIGGERING_PIPELINE_ID]$TRIGGERING_PIPELINE_ID"
      echo "##vso[task.setvariable variable=TRIGGERING_BUILD_ID]$TRIGGERING_BUILD_ID"
      echo "##vso[task.setvariable variable=BASEDIR]$HOME/server"
      echo "##vso[task.setvariable variable=RQG_HOME]$HOME/rqg"
      echo "##vso[task.setvariable variable=TOOLBOX_DIR]$HOME/toolbox"
      echo "Trigger ID:            " $TRIGGER_ID
      echo "Triggering pipeline ID:" $TRIGGERING_PIPELINE_ID
      echo "Triggering build ID:   " $TRIGGERING_BUILD_ID
    displayName: 'Check configuration'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'MariaDB tests'
      pipeline: '$(TRIGGERING_PIPELINE_ID)'
      buildVersionToDownload: 'specific'
      buildId: '$(TRIGGERING_BUILD_ID)'
      downloadType: 'single'
      artifactName: 'data'
      itemPattern: 'data/@(build|repro)/**'
      downloadPath: '$(System.ArtifactsDirectory)' 
    name: get_repro_info
    displayName: 'Download build and repro info from the previous stage'

  - script: |
      mkdir $BASEDIR
      cd $BASEDIR
      tar zxf $(System.ArtifactsDirectory)/data/build/build-*.tar.gz
    name: unpack_binaries
    displayName: 'Unpack server binaries'

  # Get tools, extract repro info, convert general log into MTR and run simplification
  - script: |
      mv $(System.ArtifactsDirectory)/data/build $(System.ArtifactsDirectory)/
      mv $(System.ArtifactsDirectory)/data/repro $(System.ArtifactsDirectory)/
      rm -rf mv $(System.ArtifactsDirectory)/data
      sudo apt-get update
      sudo apt-get install -y -q libdbi-perl libdbd-mysql-perl libsnappy1v5 gdb
      git clone "https://github.com/MariaDB/randgen" --branch=elenst-dev $RQG_HOME
      git clone "https://github.com/elenst/mariadb-toolbox" $TOOLBOX_DIR
      REPRO_DIR=$(System.ArtifactsDirectory)/repro
      cd $BASEDIR
      patch -p 1 < $TOOLBOX_DIR/mtr/mtr_default_server.patch
      cd mysql-test
      mkdir suite/bug
      mv $REPRO_DIR/last_test.test $BASEDIR/mysql-test/suite/bug/repro.test
      . $REPRO_DIR/simplification_cmd
      cp suite/bug/repro.test $(Build.ArtifactStagingDirectory)/first_test.test
      tar zcf repro.output.tar.gz repro.output var/log/mysqld.1.err
      mv repro.output.tar.gz $(Build.ArtifactStagingDirectory)/
      last_test=`ls -tr $BASEDIR/mysql-test/suite/bug/repro.test.reproducible.* | tail -n 1`
      cp $last_test $REPRO_DIR/last_test.test
      echo "#######################################################################"
      if [ -n "$_TEST_COMMENT" ] ; then
        echo $_TEST_COMMENT
        echo ""
      fi
      echo "we tried to continue reproducing the failure from pipeline $TRIGGERING_PIPELINE_ID, build $TRIGGERING_BUILD_ID"
      echo "on the server"
      cat $BASEDIR/server.info
      echo "while running the command"
      cat $REPRO_DIR/simplification_cmd
      echo "#######################################################################"
      echo ""
    name: simplify
    displayName: 'Prepare and run simplification'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/
      artifactName: data
    displayName: 'Store test file and output'
    condition: always()
