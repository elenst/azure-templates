########################################################################
# GCOV report for RQG integration tests with DML and DDL
########################################################################

# Expects BASELINE_REVISION

trigger: none

variables:

  CMAKE_BUILD_TYPE: 'Debug'
  CMAKE_OPTIONS: ''

  RQG_DURATION: 200
  RQG_THREADS: 6
  RQG_VIEWS: '--views'
  RQG_ENGINE: 'InnoDB,MyISAM,Aria'

  # --redefine=conf/mariadb/modules/acl.yy disabled due to MDEV-18003
  RQG_REDEFINES: "\
    --redefine=conf/mariadb/bulk_insert.yy \
    --redefine=conf/mariadb/modules/sql_mode.yy \
    --redefine=conf/mariadb/alter_table.yy \
    --redefine=conf/mariadb/instant_add.yy \
    --redefine=conf/mariadb/modules/alter_table_columns.yy \
    --redefine=conf/mariadb/modules/foreign_keys.yy \
    --redefine=conf/mariadb/sp.yy \
    --redefine=conf/mariadb/modules/userstat.yy \
    --redefine=conf/mariadb/modules/admin.yy \
    --redefine=conf/mariadb/modules/locks.yy \
    --redefine=conf/mariadb/versioning.yy \
    --redefine=conf/mariadb/sequences.yy \
    --redefine=conf/mariadb/modules/locks-10.4-extra.yy \
  "
  RQG_OPTIONS: "\
    --seed=time \
    --reporters=Backtrace,ErrorLog,Deadlock \
    --filter=conf/mariadb/10.4-combo-filter.ff \
  "
  MYSQLD_OPTIONS: "\
    --mysqld=--log_output=FILE \
    --mysqld=--loose-max-statement-time=20 \
    --mysqld=--lock-wait-timeout=10 \
    --mysqld=--loose-innodb-lock-wait-timeout=5 \
    --mysqld=--loose-debug_assert_on_not_freed_memory=0 \
  "

jobs:

#########
- job: GCOV
  pool:
    vmImage: 'Ubuntu 16.04'
  timeoutInMinutes: 0
  strategy:
    parallel: 1

  steps:

  - template: steps/env.yml

  - bash: |
      server_ref=${ENV_SERVER_REVISION:-$ENV_SERVER_BRANCH}
      if [ -z "$server_ref" ]; then
        echo "##vso[task.complete result=Failed]Neither \"SERVER_BRANCH\" nor \"SERVER_REVISION\" have been specified"
      fi
      infodir=$HOME/gcov_info
      mkdir $infodir
      echo "##vso[task.setvariable variable=INFODIR;isOutput=true]$infodir"
      echo "##vso[task.setvariable variable=SERVER_REF;isOutput=true]$server_ref"
      echo "##vso[task.setvariable variable=DIFF_FILE;isOutput=true]$infodir/${BASELINE_REVISION}_to_${server_ref}.diff"
    displayName: Check requirements and prepare
    name: prep

  - template: steps/install-deb-packages.yml
    parameters:
      INSTALLATION_SET: 'all'
      EXTRA_PACKAGES: 'lcov'

  # Clone the server
  - bash: |
      if [ -n "$ENV_SERVER_BRANCH" ] ; then
        server_branch="--branch=$ENV_SERVER_BRANCH"
      fi
      git clone https://github.com/MariaDB/server $server_branch $ENV_BASEDIR
      cd $ENV_BASEDIR
      git checkout $PREP_SERVER_REF
      git clean -dfx
      git submodule foreach --recursive git clean -dfx
      git submodule update
      if [ -n "$BASELINE_REVISION" ] ; then
        git fetch origin $BASELINE_REVISION
        git diff $BASELINE_REVISION > $PREP_DIFF_FILE
      fi

    displayName: 'Clone server'
    name: clone

  # Build the server in-source
  - bash: |
      set -x
      cd $ENV_BASEDIR
      cmake . $ENV_CMAKE_OPTIONS -DENABLE_GCOV=ON
      make -j5
      echo $PREP_SERVER_REF `git log -1 --abbrev=8 --pretty="%h"` > $ENV_BASEDIR/server.info
      echo $ENV_CMAKE_OPTIONS >> $ENV_BASEDIR/server.info
    displayName: 'Build server'
    name: build_server

  - template: steps/clone-test-tools.yml

  - template: steps/run-rqg-test.yml
    parameters:
      TRIAL_OPTIONS: '--grammar=conf/runtime/metadata_stability.yy --gendata=conf/runtime/metadata_stability.zz'
  - template: steps/collect-gcov-info.yml
    parameters:
      SUMMARY_FOLDER: $(prep.INFODIR)
      DIFF_FILE: $(prep.DIFF_FILE)

  - template: steps/run-rqg-test.yml
    parameters:
      TRIAL_OPTIONS: '--grammar=conf/runtime/performance_schema.yy --mysqld=--performance-schema'
  - template: steps/collect-gcov-info.yml
    parameters:
      SUMMARY_FOLDER: $(prep.INFODIR)
      DIFF_FILE: $(prep.DIFF_FILE)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(prep.INFODIR)
      artifactName: gcov-$(Build.BuildNumber)
    displayName: 'Store GCOV artifacts'
    condition: always()

#########
# Print test summary
- template: jobs/rqg-test-report.yml
  parameters:
    dependencies:
    - GCOV
